name: Deploy Frontend

on:
  push:
    branches: [main]
    paths:
      - "frontend/**"
      - ".github/workflows/frontend-deploy.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Check Infrastructure Availability
        id: check-infra
        run: |
          MAX_RETRIES=90  # 30 minutes with 20s delay
          RETRY_COUNT=0

          while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
            # Check App Runner Service
            APP_RUNNER_URL=$(aws apprunner list-services --query "ServiceSummaryList[?ServiceName=='mern-simple-app'].ServiceUrl" --output text)

            # Check S3 Bucket
            S3_BUCKET=$(aws s3api list-buckets --query "Buckets[?Name=='sample-frontend-bucket'].Name" --output text)

            # Check CloudFront Distribution
            CF_DIST=$(aws cloudfront list-distributions --query "DistributionList.Items[?contains(Origins.Items[].DomainName, 'sample-frontend-bucket')].Id" --output text)

            if [ ! -z "$APP_RUNNER_URL" ] && [ ! -z "$S3_BUCKET" ] && [ ! -z "$CF_DIST" ]; then
              echo "All infrastructure components are available"
              echo "APP_RUNNER_URL=https://$APP_RUNNER_URL" >> $GITHUB_ENV
              echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV
              echo "CF_DISTRIBUTION_ID=$CF_DIST" >> $GITHUB_ENV
              break
            fi

            RETRY_COUNT=$((RETRY_COUNT + 1))
            if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
              echo "Infrastructure not ready after 30 minutes"
              exit 1
            fi

            echo "Waiting for infrastructure... Attempt $RETRY_COUNT/$MAX_RETRIES"
            sleep 20
          done

          # Check if backend is healthy
          for i in {1..30}; do
            if curl -s "https://$APP_RUNNER_URL/health" > /dev/null; then
              echo "Backend is healthy"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "Backend health check failed"
              exit 1
            fi
            echo "Waiting for backend to be healthy... ($i/30)"
            sleep 10
          done

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install Dependencies
        run: npm ci

      - name: Build Frontend
        env:
          VITE_API_URL: ${{ env.APP_RUNNER_URL }}
        run: npm run build

      - name: Deploy to S3
        run: |
          aws s3 sync dist/ s3://${{ env.S3_BUCKET }} --delete

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CF_DISTRIBUTION_ID }} --paths "/*"
