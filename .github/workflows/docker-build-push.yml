name: Build and Push to ECR

on:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/docker-build-push.yml"
  pull_request:
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY_NAME }}

jobs:
  verify-secrets:
    name: Verify Required Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets
        run: |
          missing_secrets=()

          [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] && missing_secrets+=("AWS_ACCESS_KEY_ID")
          [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ] && missing_secrets+=("AWS_SECRET_ACCESS_KEY")
          [ -z "${{ secrets.AWS_REGION }}" ] && missing_secrets+=("AWS_REGION")
          [ -z "${{ secrets.ECR_REPOSITORY_NAME }}" ] && missing_secrets+=("ECR_REPOSITORY_NAME")

          if [ ${#missing_secrets[@]} -ne 0 ]; then
            echo "Error: The following required secrets are missing:"
            printf '%s\n' "${missing_secrets[@]}"
            echo "Please add these secrets in your GitHub repository settings"
            exit 1
          fi

          echo "All required secrets are configured"

  build-and-push:
    name: Build and Push to ECR
    needs: verify-secrets
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./backend
        run: |
          # Build Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .

          # Push Docker image to ECR
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
