name: Build backend and Push to ECR

on:
  # push:
  #   branches: [main]
  #   paths:
  #     - "backend/**"
  #     - ".github/workflows/docker-build-push.yml"
  workflow_dispatch:

env:
  AWS_REGION: us-east-1
  TF_VERSION: 1.5.7
  TF_STATE_BUCKET: terraform-state--8806442
  TF_STATE_KEY: terraform.tfstate
  TF_LOCK_TABLE: terraform-locks-8806442

jobs:
  check-ecr:
    name: Check ECR Repository
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check.outputs.exists }}
      repo_url: ${{ steps.check.outputs.repo_url }}
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Check ECR repository
        id: check
        run: |

          MAX_RETRIES=60  # 30 minutes with 30s delay
          RETRY_COUNT=0
          INFRA_READY=false

          while [ $RETRY_COUNT -lt $MAX_RETRIES ] && [ "$INFRA_READY" = false ]; do
            echo "Checking ECR repository (Attempt $((RETRY_COUNT + 1))/$MAX_RETRIES)..."

            # Get the ECR repository name from Terraform state
            ECR_REPO_NAME=$(aws s3 cp s3://${{ env.TF_STATE_BUCKET }}/${{ env.TF_STATE_KEY }} - | jq -r '.resources[] | select(.type=="aws_ecr_repository") | .instances[0].attributes.name')

            if [ "$ECR_REPO_NAME" ]; then
              echo "exists=true" >> $GITHUB_OUTPUT
              echo "ECR repository found in Terraform state"

                  # Check if repository exists in ECR
              if aws ecr describe-repositories --repository-names "$ECR_REPO_NAME" 2>/dev/null; then
                REPO_URL=$(aws ecr describe-repositories --repository-names "$ECR_REPO_NAME" --query 'repositories[0].repositoryUri' --output text)
                echo "exists=true" >> $GITHUB_OUTPUT
                echo "repo_url=$REPO_URL" >> $GITHUB_OUTPUT
                echo "ECR repository exists: $REPO_URL"
                INFRA_READY=true
                exit 0
              fi
            else
              RETRY_COUNT=$((RETRY_COUNT + 1))
              if [ $RETRY_COUNT -eq $MAX_RETRIES ]; then
                echo "❌ ECR repository not ready after 30 minutes"
                exit 1
              fi
              echo "⏳ Waiting 30 seconds before next attempt..."
              sleep 30
            fi
          done

  build-and-push:
    name: Build and Push to ECR
    needs: [check-ecr]
    if: needs.check-ecr.outputs.exists == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REPO_URL: ${{ needs.check-ecr.outputs.repo_url }}
        working-directory: ./backend
        run: |
          # Build Docker image
          docker build --no-cache -t $ECR_REPO_URL:latest .

          # Push Docker image to ECR
          docker push $ECR_REPO_URL:latest
