name: Build and Push to ECR

on:
  workflow_run:
    workflows: ["Build Infrastructure via Terraform"]
    types:
      - completed
    branches: [main]

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  verify-secrets:
    name: Verify Required Secrets
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    # defaults:
    #   run:
    #     working-directory: ../backend
    steps:
      - name: Check required secrets
        run: |
          missing_secrets=()

          # Check secrets
          [ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ] && missing_items+=("Secret: AWS_ACCESS_KEY_ID")
          [ -z "${{ secrets.AWS_SECRET_ACCESS_KEY }}" ] && missing_items+=("Secret: AWS_SECRET_ACCESS_KEY")

          # Check variables (with defaults)
          [ -z "${{ vars.AWS_REGION }}" ] && missing_items+=("Variable: AWS_REGION")
          [ -z "${{ vars.TF_STATE_BUCKET }}" ] && missing_items+=("Variable: TF_STATE_BUCKET")
          [ -z "${{ vars.TF_STATE_KEY }}" ] && missing_items+=("Variable: TF_STATE_KEY")
          [ -z "${{ vars.TF_LOCK_TABLE }}" ] && missing_items+=("Variable: TF_LOCK_TABLE")

          if [ ${#missing_items[@]} -ne 0 ]; then
            echo "Error: The following required items are missing:"
            printf '%s\n' "${missing_items[@]}"
            echo "Please add these in your GitHub repository settings"
            exit 1
          fi

          echo "All required configurations are present"

  check-changes:
    name: Check Backend Changes
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Check for backend changes
        id: check
        run: |
          git diff --name-only HEAD^ HEAD > changes.txt
          if grep -q "^backend/" changes.txt; then
            echo "has_changes=true" >> $GITHUB_OUTPUT
            echo "Backend changes detected"
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
            echo "No backend changes"
          fi

  build-and-push:
    name: Build and Push to ECR
    needs: [verify-secrets, check-changes]
    if: needs.check-changes.outputs.has_changes == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Get ECR Repository URL
        id: get-ecr-url
        run: |
          # Install jq if not already installed
          sudo apt-get update && sudo apt-get install -y jq

          # Get the ECR repository name from Terraform state
          ECR_REPO_NAME=$(aws s3 cp s3://${{ vars.TF_STATE_BUCKET }}/s3-deployment/terraform.tfstate - | jq -r '.resources[] | select(.type=="aws_ecr_repository") | .instances[0].attributes.name')
          if [ -z "$ECR_REPO_NAME" ]; then
            echo "Failed to get ECR repository name from Terraform state"
            exit 1
          fi

          # Get the ECR repository URL using AWS CLI
          ECR_REPO_URL=$(aws ecr describe-repositories --repository-names $ECR_REPO_NAME --query 'repositories[0].repositoryUri' --output text)
          echo "ECR_REPO_URL=$ECR_REPO_URL" >> $GITHUB_ENV
          echo "Retrieved ECR Repository URL: $ECR_REPO_URL"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
        working-directory: ./backend
        run: |
          # Build Docker image
          docker build -t $ECR_REPO_URL:$IMAGE_TAG .
          docker build -t $ECR_REPO_URL:latest .

          # Push Docker image to ECR
          docker push $ECR_REPO_URL:$IMAGE_TAG
          docker push $ECR_REPO_URL:latest
